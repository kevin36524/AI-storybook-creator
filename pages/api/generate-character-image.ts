import type { NextApiRequest, NextApiResponse } from 'next';
import { ai } from '@/lib/server/clients';

export default async function handler(req: NextApiRequest, res: NextApiResponse) {
    if (req.method !== 'POST') {
        return res.status(405).json({ error: 'Method Not Allowed' });
    }

    try {
        const { description } = req.body;
        if (!description) {
            return res.status(400).json({ error: 'Description is required.' });
        }
        const response = await ai.models.generateImages({
            model: 'imagen-4.0-generate-001',
            prompt: `A character portrait for a children's storybook. The character is ${description}. The style should be whimsical, vibrant, and colorful, with a simple background.`,
            config: { numberOfImages: 1, outputMimeType: 'image/png', aspectRatio: '1:1' },
        });

        if (response.generatedImages && response.generatedImages.length > 0) {
            const firstImage = response.generatedImages[0];
            if (firstImage.image?.imageBytes) {
                const base64ImageBytes = firstImage.image.imageBytes;
                res.status(200).json({ imageUrl: `data:image/png;base64,${base64ImageBytes}` });
            } else {
                throw new Error("No image data was returned by the model.");
            }
        } else {
            throw new Error("No image was generated by the model.");
        }
    } catch (error) {
        console.error('Error in /api/generate-character-image:', error);
        res.status(500).json({ error: 'Failed to generate character image.' });
    }
}
